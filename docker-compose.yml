services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: duofinance
      POSTGRES_USER: duofinance
      POSTGRES_PASSWORD: duofinance
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U duofinance"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:latest
    environment:
      MIGRATIONS_DSN: postgres://duofinance:duofinance@db:5432/duofinance?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/migrations:/migrations:ro
    entrypoint: [
      "sh","-c",
      "migrate -path=/migrations -database '$MIGRATIONS_DSN' up || true"
    ]

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://duofinance:duofinance@db:5432/duofinance?sslmode=disable
      PORT: 8080
      GIN_MODE: release
      JWT_ACCESS_SECRET: dev-access-secret
      JWT_REFRESH_SECRET: dev-refresh-secret
      JWT_ACCESS_TTL_MIN: 15
      JWT_REFRESH_TTL_DAYS: 7
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "8080:8080"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: duofinance_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production

volumes:
  postgres_data:
  pgadmin_data: